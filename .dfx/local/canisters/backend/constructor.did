type Currency = variant { btc; eth; eur; gbp; icp; usd };
type Main = service {
  createProduct : (text, text, text, Price, text, text, bool, text) -> (
      Product__1,
    );
  createUser : (text) -> (User);
  getAllProductTypes : () -> (vec Product);
  getAllProductTypesFromObjectArray : (vec Product__1) -> (vec Product);
  getAllProducts : () -> (vec Product__1) query;
  getAllUserNames : () -> (vec text);
  getAllUserTypes : () -> (vec User__1);
  getAllUsers : () -> (vec User) query;
  getAllUsersTypesFromObjectArray : (vec User) -> (vec User__1);
  loginUser : (text) -> (User);
  purchase : (User, Price, Product__1) -> ();
};
type Price = record { currency : Currency; amount : nat };
type Product = record {
  productLongDesc : text;
  productCategory : text;
  name : text;
  productShortDesc : text;
  productID : nat;
  isSold : bool;
  isVisible : bool;
  sellerID : text;
  productPicture : text;
  productPrice : Price;
};
type Product__1 = service {
  getCategory : () -> (text) query;
  getIsSold : () -> (bool) query;
  getIsVisible : () -> (bool) query;
  getLongDesc : () -> (text) query;
  getName : () -> (text) query;
  getPicture : () -> (text) query;
  getPrice : () -> (Price) query;
  getProductID : () -> (nat) query;
  getSellerID : () -> (text) query;
  getShortDesc : () -> (text) query;
  setIsVisible : (bool) -> ();
  setLongDesc : (text) -> ();
  setName : (text) -> ();
  setPicture : (text) -> ();
  setPrice : (Price) -> ();
  setProductID : (nat) -> () query;
  setShortDesc : (text) -> ();
  updateStatus : () -> ();
};
type Transaction = record {
  id : nat;
  paidPrice : Price;
  productID : text;
  buyerID : text;
};
type User = service {
  addToCart : (Product) -> ();
  addToPurchases : (Transaction) -> ();
  addToSoldItems : (Transaction) -> ();
  addToWallet : (Price) -> ();
  getBuyersCart : () -> (vec Product) query;
  getName : () -> (text) query;
  getPurchases : () -> (vec Transaction) query;
  getSellersStock : () -> (vec Product) query;
  getSoldItems : () -> (vec Transaction) query;
  getWallet : () -> (vec Price) query;
  listItem : (Product) -> ();
  setBuyersCart : (vec Product) -> ();
  setName : (text) -> ();
  setPurchases : (vec Transaction) -> ();
  setSellersStock : (vec Product) -> ();
  setSoldItems : (vec Transaction) -> ();
  setWallet : (vec Price) -> ();
  takeFromWallet : (Price) -> ();
};
type User__1 = record {
  name : text;
  soldItems : vec Transaction;
  buyersCart : vec Product;
  sellersStock : vec Product;
  purchases : vec Transaction;
  wallet : vec Price;
};
service : () -> Main