type CanisterHttpResponsePayload = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type HttpHeader = record { value : text; name : text };
type HttpOutcalls = service {
  getConfirmationDetails : (text) -> (vec Rate);
  transform : (TransformArgs) -> (CanisterHttpResponsePayload) query;
};
type HttpResponsePayload = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type Rate = record { rate : text; currency : text };
type TransformArgs = record {
  context : vec nat8;
  response : HttpResponsePayload;
};
service : HttpOutcalls